<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="ys-idatrix" version="2.5">
	<display-name>idatrix-scheduler-web</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<!-- 加载spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:META-INF/spring/catalog-root.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	 <!-- 配置加载log4j.xml文件路径 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.xml</param-value>
    </context-param>
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>webapps.root</param-value>
    </context-param>
    <!-- 服务器启动 log4j 监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

	<!-- 解决post乱码 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


    <!-- springmvc的前端控制器 -->
	<servlet>
		<servlet-name>mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation不是必须的， 如果不配置contextConfigLocation， springmvc的配置文件默认在：WEB-INF/servlet的name+"-servlet.xml" -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:META-INF/spring/catalog-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc</servlet-name>
		<!-- 拦截所有请求，包括静态资源。需要springmv.xml 中添加静态资源 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- sso 过滤拦截 -->
	<filter>
		<filter-name>SSOFilter</filter-name>
		<filter-class>com.idatrix.unisecurity.sso.client.SSOFilter</filter-class>
		<init-param>
			<param-name>serverBaseUrl</param-name>
			<!--<param-value>http://sitfch08.gdbd.com:60020</param-value> -->
			<param-value>http://10.0.0.84</param-value>
<!--            <param-value>http://10.0.0.117:8080</param-value>-->
		</init-param>
		<init-param>
			<param-name>serverInnerAddress</param-name>
			<!--<param-value>http://sitfch08.gdbd.com:60020</param-value> -->
			<param-value>http://10.0.0.84</param-value>
<!--            <param-value>http://10.0.0.117:8080</param-value>-->
		</init-param>
		<init-param>
			<param-name>projectName</param-name>
			<param-value>/security</param-value>
		</init-param>
		<init-param>
			<param-name>notLoginOnFail</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>/approve/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>/classify/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>/entry/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>/overview/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>/resource/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>/sysconfig/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>/dataUpload/*</url-pattern>
	</filter-mapping>
    <filter-mapping>
        <filter-name>SSOFilter</filter-name>
        <url-pattern>/terminalManage/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SSOFilter</filter-name>
        <url-pattern>/subscribe/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SSOFilter</filter-name>
        <url-pattern>/uploadTask/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SSOFilter</filter-name>
        <url-pattern>/subTask/*</url-pattern>
    </filter-mapping>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>/srcService/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>/service/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SSOFilter</filter-name>
		<url-pattern>/serviceLog/*</url-pattern>
	</filter-mapping>
    <filter-mapping>
        <filter-name>SSOFilter</filter-name>
        <url-pattern>/exchange/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SSOFilter</filter-name>
        <url-pattern>/dictionary/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SSOFilter</filter-name>
        <url-pattern>/file/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SSOFilter</filter-name>
        <url-pattern>/report/*</url-pattern>
    </filter-mapping>
</web-app>
