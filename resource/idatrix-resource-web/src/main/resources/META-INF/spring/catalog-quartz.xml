<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- 注册调度任务 -->
    <bean id="mapScheduler" lazy-init="false" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean" destroy-method="destroy">
        <!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->
        <property name="overwriteExistingJobs" value="true" />
        <!--必须的，QuartzScheduler 延时启动，应用启动完后 QuartzScheduler 再启动 -->
        <property name="startupDelay" value="30" />
        <!-- 设置自动启动 -->
        <property name="autoStartup" value="true" />
        <property name="triggers">
            <list>
                <ref bean="exchangeETLQuartzTrigger" />
                <ref bean="exchangeQuartzTrigger" />
                <ref bean="statisticsQuartzTrigger" />
            </list>
        </property>
        <property name="applicationContextSchedulerContextKey" value="applicationContext" />
        <property name="configLocation" value="classpath:quartz.properties" />
    </bean>


    <!--数据上报定时任务-->
    <bean id="exchangeETLQuartzTask"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <!-- durability 表示任务完成之后是否依然保留到数据库，默认false   -->
        <property name="durability" value="true" />
        <property name="requestsRecovery" value="true" />
        <property name="jobClass">
            <value>com.idatrix.resource.common.task.quartz.MyDetailQuartzJobBean</value>
        </property>
        <property name="jobDataAsMap">
            <map>
                <entry key="targetObject" value="exchangeETLTask" />
                <entry key="targetMethod" value="startTask" />
            </map>
        </property>
    </bean>
    <bean id="exchangeETLQuartzTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="exchangeETLQuartzTask"/>
        <property name="cronExpression" value="0 0/1 * * * ?"/>
    </bean>

    <!--数据交换定时任务-->
    <bean id="exchangeQuartzTask"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <!-- durability 表示任务完成之后是否依然保留到数据库，默认false   -->
        <property name="durability" value="true" />
        <property name="requestsRecovery" value="true" />
        <property name="jobClass">
            <value>com.idatrix.resource.common.task.quartz.MyDetailQuartzJobBean</value>
        </property>
        <property name="jobDataAsMap">
            <map>
                <entry key="targetObject" value="exchangeTask" />
                <entry key="targetMethod" value="startTask" />
            </map>
        </property>
    </bean>
    <bean id="exchangeQuartzTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="exchangeQuartzTask"/>
        <property name="cronExpression" value="0 0/1 * * * ?"/>
    </bean>



    <!--数据统计定时任务-->
    <bean id="statisticsQuartzTask"
          class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <!-- durability 表示任务完成之后是否依然保留到数据库，默认false   -->
        <property name="durability" value="true" />
        <property name="requestsRecovery" value="true" />
        <property name="jobClass">
            <value>com.idatrix.resource.common.task.quartz.MyDetailQuartzJobBean</value>
        </property>
        <property name="jobDataAsMap">
            <map>
                <entry key="targetObject" value="statisticsTask" />
                <entry key="targetMethod" value="startTask" />
            </map>
        </property>
    </bean>
    <bean id="statisticsQuartzTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="statisticsQuartzTask"/>
        <property name="cronExpression" value="0 0/2 * * * ?"/>
    </bean>

    <!-- 注册调度任务 -->
<!--      <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false" destroy-method="destroy">
         <property name="triggers">
             <list>
                 <ref bean="createTableShelvesTrigger"/>
             </list>
         </property>
     </bean>-->

</beans>
