<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idatrix.resource.report.dao.ServiceCallReportDAO">

    <resultMap id="ListResultMap"
            type="com.idatrix.resource.report.vo.response.ServiceVO">
        <result column="service_name" property="serviceName"/>
        <result column="service_code" property="serviceCode"/>
        <result column="call_time" property="callTime"/>
        <result column="ip" property="ip"/>
        <result column="is_success" property="success"/>
        <result column="num" property="count"/>
    </resultMap>

    <resultMap id="CountResultMap"
            type="com.idatrix.resource.report.vo.response.ServiceCountVO">
        <result column="service_name" property="serviceName"/>
        <result column="service_code" property="serviceCode"/>
        <result column="count" property="count"/>
    </resultMap>

    <select id="countByNumberOfCalls"
            parameterType="com.idatrix.resource.report.vo.request.BaseSearchVO"
            resultMap="CountResultMap">
        SELECT
        service_name,
        service_code,
        COUNT(*) AS count
        FROM
        rc_service_log
        <where>
            <if test="renterId != null ">
                AND renter_id = #{renterId}
            </if>
            <if test="startTime != null ">
                AND create_time <![CDATA[ >= ]]> #{startTime}
            </if>
            <if test="endTime != null ">
                AND create_time <![CDATA[ < ]]> #{endTime}
            </if>
        </where>
        GROUP BY
        service_code
        ORDER BY count DESC
        LIMIT #{topK}
    </select>

    <select id="countByTheAmountOfData"
            parameterType="com.idatrix.resource.report.vo.request.BaseSearchVO"
            resultMap="CountResultMap">
        SELECT
        service_name,
        service_code,
        IFNULL(sum(num),0) AS count
        FROM
        rc_service_log
        <where>
            <if test="renterId != null ">
                AND renter_id = #{renterId}
            </if>
            <if test="startTime != null ">
                AND create_time <![CDATA[ >= ]]> #{startTime}
            </if>
            <if test="endTime != null ">
                AND create_time <![CDATA[ < ]]> #{endTime}
            </if>
        </where>
        GROUP BY
        service_code
        ORDER BY count DESC
        LIMIT #{topK}
    </select>

    <select id="countByNumberOfTimes"
            parameterType="com.idatrix.resource.report.vo.request.BaseSearchVO"
            resultType="com.idatrix.resource.report.vo.response.ServiceStatisticsVO">
        SELECT
        COUNT(*) AS count,
        COUNT(is_success = 1 OR NULL) AS success,
        COUNT(is_success = 0 OR NULL) AS failure
        FROM
        rc_service_log
        <where>
            <if test="renterId != null ">
                AND renter_id = #{renterId}
            </if>
            <if test="startTime != null ">
                AND create_time <![CDATA[ >= ]]> #{startTime}
            </if>
            <if test="endTime != null ">
                AND create_time <![CDATA[ < ]]> #{endTime}
            </if>
        </where>
    </select>

    <select id="list"
            parameterType="com.idatrix.resource.report.vo.request.ServiceSearchVO"
            resultMap="ListResultMap">
        SELECT
        service_name,
        service_code,
        create_time AS call_time,
        is_success,
        num AS count
        FROM
        rc_service_log
        <where>
            <if test="renterId != null ">
                AND renter_id = #{renterId}
            </if>
            <if test="startTime != null ">
                AND create_time <![CDATA[ >= ]]> #{startTime}
            </if>
            <if test="endTime != null ">
                AND create_time <![CDATA[ < ]]> #{endTime}
            </if>
            <if test="serviceCode != null">
                AND service_code = #{serviceCode}
            </if>
        </where>
    </select>
</mapper>