<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idatrix.unisecurity.common.dao.URoleMapper">
    <resultMap id="BaseResultMap" type="com.idatrix.unisecurity.common.domain.URole">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="renter_id" property="renterId" jdbcType="BIGINT"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="is_active" property="isActive" jdbcType="TINYINT"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, renter_id, code, name, type, is_active, remark, create_time, last_update_time
    </sql>

    <sql id="limit_sql">
        <if test="page_sql != null and page_sql != ''">
            ${page_sql}
        </if>
    </sql>

    <sql id="where_all">
        <where>
            and is_active=1
            <if test="findContent != null and findContent !='' ">
                and (
                LOWER(name) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%") or
                LOWER(code) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")
                )
            </if>
            and renter_id = #{renterId,jdbcType=VARCHAR}
            and name not like '%租户管理员'
        </where>
    </sql>

    <select id="findRoleByUserId" resultType="java.lang.String">
        select r.type from idatrix_unisecurity_role r,idatrix_unisecurity_user_role ur 
        where ur.rid = r.id and ur.uid = #{id,jdbcType=BIGINT} and r.is_active=1
    </select>

    <!-- 普通的分页查询 -->
    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from idatrix_unisecurity_role
        <include refid="where_all"/>
        order by last_update_time desc
        <include refid="limit_sql"/>
    </select>
    <select id="findCount" resultMap="BaseResultMap">
        select count(1) from idatrix_unisecurity_role
        <include refid="where_all"/>
    </select>

    <!-- 选择角色给用户 ，checkbox 列表-->
    <select id="selectRoleByUserId" resultType="com.idatrix.unisecurity.permission.bo.URoleBo">
        <!--
      select ur.id,ur.name,ur.type,ifnull(uu.id,0)marker from idatrix_unisecurity_role ur
      left join idatrix_unisecurity_user_role uur on uur.uid = ur.id
      left join (select id from idatrix_unisecurity_user where id =#{id,jdbcType=BIGINT}) uu on uu.id = uur.uid
      group by ur.id
       -->
        select ur.id,ur.name,ur.type,ifnull(uur.uid,0) marker from idatrix_unisecurity_role ur
        left join(select * from idatrix_unisecurity_user_role where uid=#{id,jdbcType=BIGINT}) uur on uur.rid = ur.id
        where ur.is_active=1
    </select>

    <!-- 权限分配的分页查询 -->
    <select id="findRoleAndPermission" resultType="com.idatrix.unisecurity.permission.bo.RolePermissionAllocationBo">
        select ur.id,ur.type,ur.name,group_concat(up.name) permissionNames,group_concat(up.id)permissionIds from
        idatrix_unisecurity_role ur
        left join idatrix_unisecurity_role_permission urp on urp.rid = ur.id
        left join idatrix_unisecurity_permission up on up.id = urp.pid
        <where>
            <if test="findContent != null and findContent !='' ">
                and (
                LOWER(ur.name) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%") or
                LOWER(ur.type) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")
                )
            </if>
        </where>
        group by ur.id
        <include refid="limit_sql"/>
    </select>

    <select id="getRenterIdByRType" resultType="java.lang.Long">
        select r.renter_id from idatrix_unisecurity_role r where r.type = #{rType,jdbcType=VARCHAR} and r.is_active=1
    </select>

    <!-- 查询用户全部的role & permission -->
    <resultMap id="findNowAllPermission_resultMap" extends="BaseResultMap"
               type="com.idatrix.unisecurity.common.domain.URole">
        <collection property="permissions" javaType="com.idatrix.unisecurity.common.domain.UPermission">
            <id column="pid" property="id" jdbcType="BIGINT"/>
            <result column="pname" property="name" jdbcType="VARCHAR"/>
            <result column="url" property="url" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <!-- 根据用户ID，查询所有权限 -->
    <select id="findNowAllPermission" resultMap="findNowAllPermission_resultMap">
        select ur.id,ur.name,ur.type ,up.id pid,up.url,up.name pname
        from (select rid from idatrix_unisecurity_user_role where uid = #{userId,jdbcType=BIGINT}) uur
        left join idatrix_unisecurity_role ur on uur.rid = ur.id
        left join idatrix_unisecurity_role_permission urp on urp.rid = ur.id
        left join idatrix_unisecurity_permission up on up.id = urp.pid
    </select>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from idatrix_unisecurity_role
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findAdminRoleByRenterId" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select count(1)
        from idatrix_unisecurity_role
        where renter_id = #{renterId,jdbcType=BIGINT}
    </select>

    <select id="findRoleByCode" resultType="java.lang.Integer" parameterType="java.lang.String">
        select count(1)
        from idatrix_unisecurity_role
        where code = #{code,jdbcType=VARCHAR}
    </select>

    <select id="findRoleByType" resultType="java.lang.Integer" parameterType="java.lang.String">
        select count(1)
        from idatrix_unisecurity_role
        where type = #{type,jdbcType=VARCHAR} AND is_active = 1
    </select>

    <select id="getIdByRenterIdAndName" resultType="java.lang.Long" parameterType="java.util.Map">
        select id from idatrix_unisecurity_role
        where renter_id =  #{renterId,jdbcType=BIGINT}
        and name = #{name,jdbcType=VARCHAR}
    </select>

    <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
        update idatrix_unisecurity_role
        set is_active = 0
        where id = #{id,jdbcType=BIGINT}
    </update>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.idatrix.unisecurity.common.domain.URole">
        insert into idatrix_unisecurity_role (id, renter_id, code, name, type, is_active, remark
        )
        values (#{id,jdbcType=BIGINT}, #{renterId,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{isActive, jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.idatrix.unisecurity.common.domain.URole">
        insert into idatrix_unisecurity_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="renterId != null">
                renter_id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="isActive != null">
                is_active,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="lastUpdateTime != null">
                last_update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="renterId != null">
                #{renterId,jdbcType=BIGINT},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null">
                #{isActive,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateTime != null">
                #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.idatrix.unisecurity.common.domain.URole">
        update idatrix_unisecurity_role
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null">
                is_active = #{isActive,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateTime != null">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.idatrix.unisecurity.common.domain.URole">
        update idatrix_unisecurity_role
        set
        name = #{name,jdbcType=VARCHAR},
        type = #{type,jdbcType=VARCHAR},
        is_active = #{isActive,jdbcType=TINYINT},
        remark = #{remark,jdbcType=VARCHAR},
        where id = #{id,jdbcType=BIGINT}
    </update>


    <select id="findRolesByUserId" resultMap="BaseResultMap">
        select r.* from idatrix_unisecurity_role r,idatrix_unisecurity_user_role ur 
        where ur.rid = r.id and ur.uid = #{userId,jdbcType=BIGINT} and r.is_active=1
    </select>

    <select id="getRoleIdByCode" resultType="java.lang.Long">
        select r.id from idatrix_unisecurity_role r
        where r.code = #{code,jdbcType=VARCHAR}
    </select>

    <select id="findPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from idatrix_unisecurity_role
        WHERE is_active=1
        <if test="key != null and key !='' ">
            and (
            LOWER(name) like CONCAT("%",#{key, jdbcType=VARCHAR},"%") or
            LOWER(code) like CONCAT("%",#{key, jdbcType=VARCHAR},"%")
            )
        </if>
        and renter_id = #{renterId, jdbcType=VARCHAR} and name not like '%租户管理员'
    </select>

    <select id="findRoleByName" resultType="java.lang.Integer"
            parameterType="com.idatrix.unisecurity.common.domain.URole">
        SELECT
        count(1)
        FROM
        idatrix_unisecurity_role
        WHERE
        NAME = #{name,jdbcType=VARCHAR}
        AND renter_id = #{renterId,jdbcType=BIGINT}
        AND is_active = 1
        <if test="id != null">
            AND id != #{id,jdbcType=BIGINT}
        </if>
    </select>

    <select id="getRoleByName" resultMap="BaseResultMap">
        SELECT
            *
        FROM
            idatrix_unisecurity_role
        WHERE
            is_active = 1
        AND renter_id = #{renterId, jdbcType=BIGINT}
        AND name = #{roleName, jdbcType=VARCHAR}
    </select>

    <select id="findRoleCodesByUserId" resultType="java.lang.String">
        SELECT
            r.`code`
        FROM
            idatrix_unisecurity_user_role ur
        LEFT JOIN idatrix_unisecurity_role r ON r.id = ur.rid
        WHERE
            ur.uid = #{userId, jdbcType=BIGINT}
    </select>

</mapper>
