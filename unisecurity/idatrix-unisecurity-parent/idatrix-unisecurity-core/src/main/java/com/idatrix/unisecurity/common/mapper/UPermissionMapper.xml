<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idatrix.unisecurity.common.dao.UPermissionMapper">

    <resultMap id="BaseResultMap" type="com.idatrix.unisecurity.common.domain.UPermission">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="client_system_id" property="clientSystemId" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="redirect_url" property="redirectUrl" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="is_show" property="isShow" jdbcType="TINYINT"/>
        <result column="show_order" property="showOrder" jdbcType="INTEGER"/>
        <result column="url_desc" property="urlDesc" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,parent_id,client_system_id,type,url, redirect_url,name,is_show,show_order,url_desc
    </sql>

    <sql id="limit_sql">
        <if test="page_sql != null and page_sql != ''">
            ${page_sql}
        </if>
    </sql>

    <sql id="where_all">
        <where>
            <if test="findContent != null and findContent !='' ">
                and (
                LOWER(name) like CONCAT("%",#{findContent, jdbcType=VARCHAR},"%") or
                LOWER(url) like CONCAT("%",#{findContent, jdbcType=VARCHAR},"%")
                )
            </if>
            <if test="systemIds != null and systemIds.length > 0">
                AND (
                    client_system_id IS NULL OR client_system_id IN
                    <foreach collection="systemIds" item="systemId" index="index" open="(" close=")" separator=",">
                        #{systemId}
                    </foreach>
                )
            </if>
        </where>
    </sql>

    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from idatrix_unisecurity_permission
        <include refid="where_all"/>
        <include refid="limit_sql"/>
    </select>

    <select id="findCount" resultMap="BaseResultMap">
        select count(1) from idatrix_unisecurity_permission
        <include refid="where_all"/>
    </select>

    <!--根据角色获取权限，marker:0,没有权限，marker：非0(和up.id)一致表示有权限。
      public boolean isCheck(){
          return StringUtils.equals(roleId,marker);
      }
    -->
    <select id="selectPermissionByRoleId" resultType="com.idatrix.unisecurity.permission.bo.UPermissionBo">
        <!--原来的语句，在mysql 5.7版本中，没有结果集。故做了一下修改。
          select up.id,ur.id roleId,up.name,up.url,ifnull(ur.id,0)marker from idatrix_unisecurity_permission up
          left join idatrix_unisecurity_role_permission urp on urp.pid = up.id
          left join (select id from idatrix_unisecurity_role where id = #{id,jdbcType=BIGINT}) ur on ur.id = urp.rid
          group by up.id

          select up.id,ur.id roleId,up.name,up.type,up.url,min(ifnull(ur.id,0)) marker from idatrix_unisecurity_permission up
          left join idatrix_unisecurity_role_permission urp on urp.pid = up.id
          left join (select id from idatrix_unisecurity_role where id = #{id,jdbcType=BIGINT}) ur on ur.id = urp.rid
        -->
        select up.id,urp.rid roleId,up.name,up.type,up.url from idatrix_unisecurity_permission up
        left join idatrix_unisecurity_role_permission urp on urp.pid = up.id where urp.rid=#{id,jdbcType=BIGINT}
        group by up.id
    </select>

    <!-- 根据用ID查询permission -->
    <select id="findPermissionByUserId" resultType="java.lang.String">
        select p.url from idatrix_unisecurity_permission p , idatrix_unisecurity_role_permission rp, idatrix_unisecurity_user_role ur
        where uid =#{id,jdbcType=BIGINT} and p.id = rp.pid and rp.rid = ur.rid and p.url is not NULL and p.url &lt;&gt; ''
    </select>

    <select id="selectPermByUserIdAndCid" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
          p.id,p.parent_id,p.type,p.url,p.redirect_url,p.name,p.is_show,p.show_order,p.client_system_id
        from idatrix_unisecurity_permission p, idatrix_unisecurity_role_permission rp, idatrix_unisecurity_user_role ur,idatrix_unisecurity_role r
        where ur.uid =#{userId,jdbcType=BIGINT} and p.client_system_id=#{cid,jdbcType=VARCHAR} and p.id = rp.pid and rp.rid = ur.rid
        and r.id= ur.rid and p.is_show=1 and r.is_active=1
    </select>

    <select id="selectPermByCid" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
          <include refid="Base_Column_List" />
        from idatrix_unisecurity_permission
        where client_system_id=#{cid,jdbcType=VARCHAR} and is_show=1
    </select>

    <!--
        select p.id,p.parent_id,p.type,p.url,p.name,p.is_show,p.show_order,p.client_system_id from idatrix_unisecurity_permission p , idatrix_unisecurity_role_permission rp, idatrix_unisecurity_user_role ur
         where ur.uid =#{userId,jdbcType=BIGINT} and p.id = rp.pid and rp.rid = ur.rid and FIND_IN_SET(p.id,queryChildrenPermitInfo(1))
     -->
    <select id="selectPermissionByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
            p.id,
            p.parent_id,
            p.type,
            p.url,
            p.redirect_url,
            p.NAME,
            p.is_show,
            p.show_order,
            p.client_system_id
        FROM
            idatrix_unisecurity_permission p,
            idatrix_unisecurity_role_permission rp,
            idatrix_unisecurity_user_role ur
        WHERE
            p.id = rp.pid
        AND rp.rid = ur.rid
        AND ur.uid = #{userId,jdbcType=BIGINT}
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from idatrix_unisecurity_permission
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="getSystemPermission" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from idatrix_unisecurity_permission where parent_id=1
    </select>

    <select id="getChildrenById" parameterType="java.lang.Long" resultType="java.lang.Long">
        select id from idatrix_unisecurity_permission p where FIND_IN_SET(p.id,queryChildrenPermitInfo(#{id,jdbcType=BIGINT})) and p.id &lt;&gt; #{id,jdbcType=BIGINT}
    </select>

    <select id="getAdminRoleIdsByClientSystemId" parameterType="java.lang.String" resultType="java.lang.Long">
         select role.id from idatrix_unisecurity_role role left join idatrix_unisecurity_renter renter
         on role.renter_id=renter.id where role.name like "%租户管理员%" and renter.opened_resource like CONCAT("%",#{clientSystemId,jdbcType=VARCHAR},"%");
    </select>

    <select id="findPermission" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
            count(1)
        FROM
            idatrix_unisecurity_permission
        WHERE
            client_system_id = #{clientSystemId, jdbcType=VARCHAR}
            AND url = #{url, jdbcType=VARCHAR}
    </select>

    <select id="findSystemByClientId" parameterType="java.lang.String" resultType="java.lang.Long">
        select id from idatrix_unisecurity_permission p 
        where client_system_id = #{clientSystemId,jdbcType=VARCHAR} and type='系统'
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from idatrix_unisecurity_permission
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.idatrix.unisecurity.common.domain.UPermission">
        insert into idatrix_unisecurity_permission (id, parent_id, client_system_id, type, url, name, is_show, show_order, url_desc)
        values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{clientSystemId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{isShow,jdbcType=TINYINT}, #{showOrder,jdbcType=INTEGER}, #{urlDesc,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.idatrix.unisecurity.common.domain.UPermission">
        insert into idatrix_unisecurity_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="clientSystemId != null">
                client_system_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="redirectUrl != null">
                redirect_url,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="isShow != null">
                is_show,
            </if>
            <if test="showOrder != null">
                show_order,
            </if>
            <if test="urlDesc != null">
                url_desc,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="clientSystemId != null">
                #{clientSystemId,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="redirectUrl != null">
                #{redirectUrl,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="isShow != null">
                #{isShow,jdbcType=TINYINT},
            </if>
            <if test="showOrder != null">
                #{showOrder,jdbcType=INTEGER},
            </if>
            <if test="urlDesc != null">
                #{urlDesc,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.idatrix.unisecurity.common.domain.UPermission">
        update idatrix_unisecurity_permission
        <set>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="redirectUrl != null">
                redirect_url = #{redirectUrl,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="isShow != null">
                is_show = #{isShow,jdbcType=TINYINT},
            </if>
            <if test="showOrder != null">
                show_order = #{showOrder,jdbcType=INTEGER},
            </if>
            <if test="urlDesc != null">
                url_desc = #{urlDesc,jdbcType=VARCHAR},
            </if>
        </set>
        <where>
            <choose>
                <when test="id != null">
                    id = #{id,jdbcType=BIGINT}
                </when>
                <otherwise>
                    1=2
                </otherwise>
            </choose>
        </where>
    </update>

    <update id="updateByPrimaryKey" parameterType="com.idatrix.unisecurity.common.domain.UPermission">
        update idatrix_unisecurity_permission
        set type = #{type,jdbcType=VARCHAR},
             url = #{url,jdbcType=VARCHAR},
             redirect_url = #{redirectUrl,jdbcType=VARCHAR},
             name = #{name,jdbcType=VARCHAR},
             is_show = #{isShow,jdbcType=TINYINT},
             show_order = #{showOrder,jdbcType=INTEGER},
             url_desc = #{urlDesc,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 根据用ID查询rent permission -->
    <select id="findRentPermissionByUserId" resultType="java.lang.String">
        select p.url from idatrix_unisecurity_permission p, idatrix_unisecurity_renter r, idatrix_unisecurity_user u
        where u.id =#{id,jdbcType=BIGINT} and u.username=r.admin_account and find_in_set(p.client_system_id, r.opened_resource)
        and p.url is not NULL and p.url &lt;&gt; ''
    </select>

    <select id="findPermissionIdsBySystemIds" resultType="java.lang.Long">
        SELECT
          id
        FROM
          idatrix_unisecurity_permission
        WHERE
          is_show = 1
        AND client_system_id IN
        <foreach collection="array" item="systemId" index="index" open="(" separator="," close=")">
            #{systemId}
        </foreach>
    </select>

</mapper>