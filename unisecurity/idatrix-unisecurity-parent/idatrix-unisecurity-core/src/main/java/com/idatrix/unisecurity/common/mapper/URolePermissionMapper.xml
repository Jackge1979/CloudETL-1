<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idatrix.unisecurity.common.dao.URolePermissionMapper">
    <resultMap id="BaseResultMap" type="com.idatrix.unisecurity.common.domain.URolePermission">
        <result column="rid" property="rid" jdbcType="BIGINT"/>
        <result column="pid" property="pid" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        rid, pid
    </sql>
    <!-- 根据权限ID查找 -->
    <select id="findRolePermissionByPid" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from idatrix_unisecurity_role_permission
        where pid = #{id,jdbcType=BIGINT}
    </select>
    <!-- 根据角色ID查找 -->
    <select id="findRolePermissionByRid" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from idatrix_unisecurity_role_permission
        where rid = #{id,jdbcType=BIGINT}
    </select>
    <!-- 根据权限 && 角色ID查找 -->
    <select id="find" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from idatrix_unisecurity_role_permission
        where rid = #{rid,jdbcType=BIGINT}
        and pid = #{pid,jdbcType=BIGINT}
    </select>

    <!-- 根据权限ID删除-->
    <delete id="deleteByPid">
        delete from idatrix_unisecurity_role_permission where pid = #{id,jdbcType=BIGINT}
    </delete>

    <!-- 根据角色ID删除-->
    <delete id="deleteByRid">
        delete from idatrix_unisecurity_role_permission where rid = #{id,jdbcType=BIGINT}
    </delete>
    <!-- 根据角色ID && 权限ID删除-->
    <delete id="delete">
        delete from idatrix_unisecurity_role_permission where rid = #{rid,jdbcType=BIGINT}
        and pid = #{pid,jdbcType=BIGINT}
    </delete>

    <!-- 根据角色IDs删除-->
    <delete id="deleteByRids">
        delete from idatrix_unisecurity_role_permission where rid in(${roleIds})
    </delete>

    <insert id="insert" parameterType="com.idatrix.unisecurity.common.domain.URolePermission">
        insert into idatrix_unisecurity_role_permission (rid, pid)
        values (#{rid,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.idatrix.unisecurity.common.domain.URolePermission">
        insert into idatrix_unisecurity_role_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rid != null">
                rid,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="rid != null">
                #{rid,jdbcType=BIGINT},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <insert id="batchInsert" parameterType="java.util.Map">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into idatrix_unisecurity_role_permission (rid, pid,create_time)
        values
        <foreach collection="roleIds" item="item" index="index" separator=",">
            (#{item, jdbcType=BIGINT}, #{permissionId, jdbcType=BIGINT}, #{date, jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <insert id="roleRelationPermission" parameterType="java.util.Map">
        INSERT INTO idatrix_unisecurity_role_permission (rid, pid, create_time)
        VALUES
        <foreach collection="permissionIds" item="permissionId" index="index" separator=",">
            (#{roleId, jdbcType=BIGINT}, #{permissionId, jdbcType=BIGINT}, #{date, jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <insert id="permissionToRenterAdminRole">
      insert into idatrix_unisecurity_role_permission values
      <foreach collection="permissionIds" item="permissionId" index="index" separator=",">
          (#{roleId}, #{permissionId}, #{date})
      </foreach>
    </insert>

    <update id="roleSynchPermissionByRenter">
        DELETE
        FROM
            idatrix_unisecurity_role_permission
        WHERE
            rid IN (
                SELECT
                    id
                FROM
                    idatrix_unisecurity_role
                WHERE
                    is_active = 1
                AND renter_id = #{renterId, jdbcType=BIGINT}
                AND NAME NOT LIKE '%租户管理员'
            )
        AND pid IN (
            SELECT
                id
            FROM
                idatrix_unisecurity_permission
            WHERE
                is_show = 1
            AND client_system_id NOT IN
            <foreach collection="systemIds" item="systemId" index="index" open="(" separator="," close=")">
              #{systemId}
            </foreach>
        )
    </update>

</mapper>